{"id":"../../node_modules/html-to-text/lib/typedefs.js","dependencies":[{"name":"/Users/seansimpson/Dropbox/My Mac (MacBook-Pro)/Documents/Code/Udemy/MyNatours/natours-app/package.json","includedInParent":true,"mtime":1652074999468},{"name":"/Users/seansimpson/Dropbox/My Mac (MacBook-Pro)/Documents/Code/Udemy/MyNatours/natours-app/node_modules/html-to-text/package.json","includedInParent":true,"mtime":1652074999203}],"generated":{"js":"/**\n * @typedef { object } Options\n * HtmlToText options.\n *\n * @property { BaseElementsOptions }  [baseElements]\n * Options for narrowing down to informative parts of HTML document.\n *\n * @property { DecodeOptions }        [decodeOptions]\n * Text decoding options given to `he.decode`.\n *\n * For more information see the [he](https://github.com/mathiasbynens/he) module.\n *\n * @property { object.< string, FormatCallback > } [formatters = {}]\n * A dictionary with custom formatting functions for specific kinds of elements.\n *\n * Keys are custom string identifiers, values are callbacks.\n *\n * @property { LimitsOptions }        [limits]\n * Options for handling complex documents and limiting the output size.\n *\n * @property { LongWordSplitOptions } [longWordSplit]\n * Describes how to wrap long words.\n *\n * @property { boolean }              [preserveNewlines = false]\n * By default, any newlines `\\n` from the input HTML are collapsed into space as any other HTML whitespace characters.\n * If `true`, these newlines will be preserved in the output.\n * This is only useful when input HTML carries some plain text formatting instead of proper tags.\n *\n * @property { SelectorDefinition[] } [selectors = []]\n * Instructions for how to render HTML elements based on matched selectors.\n *\n * Use this to (re)define options for new or already supported tags.\n *\n * @property { string[] | boolean }   [tables = []]\n * Deprecated. Use selectors with `format: 'dataTable'` instead.\n *\n * @property { string }               [whitespaceCharacters = ' \\t\\r\\n\\f\\u200b']\n * All characters that are considered whitespace.\n * Default is according to HTML specifications.\n *\n * @property { number | boolean | null } [wordwrap = 80]\n * After how many chars a line break should follow in `p` elements.\n *\n * Set to `null` or `false` to disable word-wrapping.\n */\n\n/**\n * @typedef { object } BaseElementsOptions\n * Options for narrowing down to informative parts of HTML document.\n *\n * @property { string[] } [selectors = ['body']]\n * The resulting text output will be composed from the text content of elements\n * matched with these selectors.\n *\n * @property { 'selectors' | 'occurrence' } [orderBy = 'selectors']\n * When multiple selectors are set, this option specifies\n * whether the selectors order has to be reflected in the output text.\n *\n * `'selectors'` (default) - matches for the first selector will appear first, etc;\n *\n * `'occurrence'` - all bases will appear in the same order as in input HTML.\n *\n * @property { boolean } [returnDomByDefault = true]\n * Use the entire document if none of provided selectors matched.\n */\n\n/**\n * @typedef { object } DecodeOptions\n * Text decoding options given to `he.decode`.\n *\n * For more information see the [he](https://github.com/mathiasbynens/he) module.\n *\n * @property { boolean } [isAttributeValue = false]\n * TL;DR: If set to `true` - leave attribute values raw, don't parse them as text content.\n *\n * @property { boolean } [strict = false]\n * TL;DR: If set to `true` - throw an error on invalid HTML input.\n */\n\n/**\n * @typedef { object } LimitsOptions\n * Options for handling complex documents and limiting the output size.\n *\n * @property { string } [ellipsis = ...]\n * A string to put in place of skipped content.\n *\n * @property { number | undefined } [maxBaseElements = undefined]\n * Stop looking for new base elements after this number of matches.\n *\n * No ellipsis is used when this condition is met.\n *\n * No limit if undefined.\n *\n * @property { number | undefined } [maxChildNodes = undefined]\n * Process only this many child nodes of any element.\n *\n * Remaining nodes, if any, will be replaced with ellipsis.\n *\n * Text nodes are counted along with tags.\n *\n * No limit if undefined.\n *\n * @property { number | undefined } [maxDepth = undefined]\n * Only go to a certain depth starting from `Options.baseElement`.\n *\n * Replace deeper nodes with ellipsis.\n *\n * No depth limit if undefined.\n *\n * @property { number } [maxInputLength = 16_777_216]\n * If the input string is longer than this value - it will be truncated\n * and a message will be sent to `stderr`.\n *\n * Ellipsis is not used in this case.\n */\n\n/**\n * @typedef { object } LongWordSplitOptions\n * Describes how to wrap long words.\n *\n * @property { boolean }  [forceWrapOnLimit = false]\n * Break long words on the `Options.wordwrap` limit when there are no characters to wrap on.\n *\n * @property { string[] } [wrapCharacters = []]\n * An array containing the characters that may be wrapped on.\n */\n\n/**\n * @typedef { object } SelectorDefinition\n * Describes how to handle tags matched by a selector.\n *\n * @property { string } selector\n * CSS selector. Refer to README for notes on supported selectors etc.\n *\n * @property { string } format\n * Identifier of a {@link FormatCallback}, built-in or provided in `Options.formatters` dictionary.\n *\n * @property { FormatOptions } options\n * Options to customize the formatter for this element.\n */\n\n/**\n * @typedef { object } FormatOptions\n * Options specific to different formatters ({@link FormatCallback}).\n * This is an umbrella type definition. Each formatter supports it's own subset of options.\n *\n * @property { number } [leadingLineBreaks]\n * Number of line breaks to separate previous block from this one.\n *\n * Note that N+1 line breaks are needed to make N empty lines.\n *\n * @property { number } [trailingLineBreaks]\n * Number of line breaks to separate this block from the next one.\n *\n * Note that N+1 line breaks are needed to make N empty lines.\n *\n * @property { string | null } [baseUrl = null]\n * (Only for: `anchor` and `image` formatters.) Server host for link `href` attributes and image `src` attributes\n * relative to the root (the ones that start with `/`).\n *\n * For example, with `baseUrl = 'http://asdf.com'` and `<a href='/dir/subdir'>...</a>`\n * the link in the text will be `http://asdf.com/dir/subdir`.\n *\n * Keep in mind that `baseUrl` should not end with a `/`.\n *\n * @property { boolean } [hideLinkHrefIfSameAsText = false]\n * (Only for: `anchor` formatter.) By default links are translated in the following way:\n *\n * `<a href='link'>text</a>` => becomes => `text [link]`.\n *\n * If this option is set to `true` and `link` and `text` are the same,\n * `[link]` will be omitted and only `text` will be present.\n *\n * @property { boolean } [ignoreHref = false]\n * (Only for: `anchor` formatter.) Ignore all links. Only process internal text of anchor tags.\n *\n * @property { [string, string] | false } [linkBrackets]\n * (Only for: `anchor` and `image` formatters.) Surround links with these brackets. Default: `['[', ']']`.\n *\n * Set to `false` or `['', '']` to disable.\n *\n * @property { boolean } [noAnchorUrl = true]\n * (Only for: `anchor` formatter.) Ignore anchor links (where `href='#...'`).\n *\n * @property { string } [itemPrefix = ' * ']\n * (Only for: `unorderedList` formatter.) String prefix for each list item.\n *\n * @property { boolean } [uppercase = true]\n * (Only for: `heading` formatter.) By default, headings (`<h1>`, `<h2>`, etc) are uppercased.\n *\n * Set this to `false` to leave headings as they are.\n *\n * @property { number | undefined } [length = undefined]\n * (Only for: `horizontalLine` formatter.) Length of the `<hr/>` line.\n *\n * If numeric value is provided - it is used.\n * Otherwise, if global `wordwrap` number is provided - it is used.\n * If neither is true, then the fallback value of 40 is used.\n *\n * @property { boolean } [trimEmptyLines = true]\n * (Only for: `blockquote` formatter.) Trim empty lines from blockquote.\n *\n * @property { boolean } [uppercaseHeaderCells = true]\n * (Only for: `table`, `dataTable` formatter.) By default, heading cells (`<th>`) are uppercased.\n *\n * Set this to `false` to leave heading cells as they are.\n *\n * @property { number } [maxColumnWidth = 60]\n * (Only for: `table`, `dataTable` formatter.) Data table cell content will be wrapped to fit this width\n * instead of global `wordwrap` limit.\n *\n * Set this to `undefined` in order to fall back to `wordwrap` limit.\n *\n * @property { number } [colSpacing = 3]\n * (Only for: `table`, `dataTable` formatter.) Number of spaces between data table columns.\n *\n * @property { number } [rowSpacing = 0]\n * (Only for: `table`, `dataTable` formatter.) Number of empty lines between data table rows.\n *\n */\n\n/**\n * @typedef { object } DomNode\n * Simplified definition of [htmlparser2](https://github.com/fb55/htmlparser2) Node type.\n *\n * Makes no distinction between elements (tags) and data nodes (good enough for now).\n *\n * @property { string }                 type       Type of node - \"text\", \"tag\", \"comment\", \"script\", etc.\n * @property { string }                 [data]     Content of a data node.\n * @property { string }                 [name]     Tag name.\n * @property { object.<string,string> } [attribs]  Tag attributes dictionary.\n * @property { DomNode[] }              [children] Child nodes.\n * @property { DomNode }                [parent]   Parent node.\n */\n\n/**\n * A function to stringify a DOM node.\n *\n * @callback FormatCallback\n *\n * @param   { DomNode }           elem          A DOM node as returned by [htmlparser2](https://github.com/fb55/htmlparser2).\n * @param   { RecursiveCallback } walk          Recursive callback to process child nodes.\n * @param   { BlockTextBuilder }  builder       Passed around to accumulate output text. Contains options object.\n * @param   { FormatOptions }     formatOptions Options specific to this callback.\n */\n\n/**\n * A function to process child nodes.\n * Passed into a {@link FormatCallback} as an argument.\n *\n * @callback RecursiveCallback\n *\n * @param   { DomNode[] }        [nodes] DOM nodes array.\n * @param   { BlockTextBuilder } builder Passed around to accumulate output text. Contains options object.\n */"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":2,"column":0}},{"generated":{"line":2,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":4,"column":0}},{"generated":{"line":4,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":5,"column":0}},{"generated":{"line":5,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":6,"column":0}},{"generated":{"line":6,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":7,"column":0}},{"generated":{"line":7,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":8,"column":0}},{"generated":{"line":8,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":9,"column":0}},{"generated":{"line":9,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":10,"column":0}},{"generated":{"line":10,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":11,"column":0}},{"generated":{"line":11,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":12,"column":0}},{"generated":{"line":12,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":13,"column":0}},{"generated":{"line":13,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":14,"column":0}},{"generated":{"line":14,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":15,"column":0}},{"generated":{"line":15,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":16,"column":0}},{"generated":{"line":16,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":17,"column":0}},{"generated":{"line":17,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":18,"column":0}},{"generated":{"line":18,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":19,"column":0}},{"generated":{"line":19,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":20,"column":0}},{"generated":{"line":20,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":21,"column":0}},{"generated":{"line":21,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":22,"column":0}},{"generated":{"line":22,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":23,"column":0}},{"generated":{"line":23,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":24,"column":0}},{"generated":{"line":24,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":25,"column":0}},{"generated":{"line":25,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":26,"column":0}},{"generated":{"line":26,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":27,"column":0}},{"generated":{"line":27,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":28,"column":0}},{"generated":{"line":28,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":29,"column":0}},{"generated":{"line":29,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":30,"column":0}},{"generated":{"line":30,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":31,"column":0}},{"generated":{"line":31,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":32,"column":0}},{"generated":{"line":32,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":33,"column":0}},{"generated":{"line":33,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":34,"column":0}},{"generated":{"line":34,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":35,"column":0}},{"generated":{"line":35,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":36,"column":0}},{"generated":{"line":36,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":37,"column":0}},{"generated":{"line":37,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":38,"column":0}},{"generated":{"line":38,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":39,"column":0}},{"generated":{"line":39,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":40,"column":0}},{"generated":{"line":40,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":41,"column":0}},{"generated":{"line":41,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":42,"column":0}},{"generated":{"line":42,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":43,"column":0}},{"generated":{"line":43,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":44,"column":0}},{"generated":{"line":44,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":45,"column":0}},{"generated":{"line":45,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":46,"column":0}},{"generated":{"line":47,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":48,"column":0}},{"generated":{"line":48,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":49,"column":0}},{"generated":{"line":49,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":50,"column":0}},{"generated":{"line":50,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":51,"column":0}},{"generated":{"line":51,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":52,"column":0}},{"generated":{"line":52,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":53,"column":0}},{"generated":{"line":53,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":54,"column":0}},{"generated":{"line":54,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":55,"column":0}},{"generated":{"line":55,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":56,"column":0}},{"generated":{"line":56,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":57,"column":0}},{"generated":{"line":57,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":58,"column":0}},{"generated":{"line":58,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":59,"column":0}},{"generated":{"line":59,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":60,"column":0}},{"generated":{"line":60,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":61,"column":0}},{"generated":{"line":61,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":62,"column":0}},{"generated":{"line":62,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":63,"column":0}},{"generated":{"line":63,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":64,"column":0}},{"generated":{"line":64,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":65,"column":0}},{"generated":{"line":65,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":66,"column":0}},{"generated":{"line":67,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":68,"column":0}},{"generated":{"line":68,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":69,"column":0}},{"generated":{"line":69,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":70,"column":0}},{"generated":{"line":70,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":71,"column":0}},{"generated":{"line":71,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":72,"column":0}},{"generated":{"line":72,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":73,"column":0}},{"generated":{"line":73,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":74,"column":0}},{"generated":{"line":74,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":75,"column":0}},{"generated":{"line":75,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":76,"column":0}},{"generated":{"line":76,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":77,"column":0}},{"generated":{"line":77,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":78,"column":0}},{"generated":{"line":78,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":79,"column":0}},{"generated":{"line":80,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":81,"column":0}},{"generated":{"line":81,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":82,"column":0}},{"generated":{"line":82,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":83,"column":0}},{"generated":{"line":83,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":84,"column":0}},{"generated":{"line":84,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":85,"column":0}},{"generated":{"line":85,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":86,"column":0}},{"generated":{"line":86,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":87,"column":0}},{"generated":{"line":87,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":88,"column":0}},{"generated":{"line":88,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":89,"column":0}},{"generated":{"line":89,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":90,"column":0}},{"generated":{"line":90,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":91,"column":0}},{"generated":{"line":91,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":92,"column":0}},{"generated":{"line":92,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":93,"column":0}},{"generated":{"line":93,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":94,"column":0}},{"generated":{"line":94,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":95,"column":0}},{"generated":{"line":95,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":96,"column":0}},{"generated":{"line":96,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":97,"column":0}},{"generated":{"line":97,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":98,"column":0}},{"generated":{"line":98,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":99,"column":0}},{"generated":{"line":99,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":100,"column":0}},{"generated":{"line":100,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":101,"column":0}},{"generated":{"line":101,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":102,"column":0}},{"generated":{"line":102,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":103,"column":0}},{"generated":{"line":103,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":104,"column":0}},{"generated":{"line":104,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":105,"column":0}},{"generated":{"line":105,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":106,"column":0}},{"generated":{"line":106,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":107,"column":0}},{"generated":{"line":107,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":108,"column":0}},{"generated":{"line":108,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":109,"column":0}},{"generated":{"line":109,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":110,"column":0}},{"generated":{"line":110,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":111,"column":0}},{"generated":{"line":111,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":112,"column":0}},{"generated":{"line":112,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":113,"column":0}},{"generated":{"line":113,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":114,"column":0}},{"generated":{"line":114,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":115,"column":0}},{"generated":{"line":115,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":116,"column":0}},{"generated":{"line":117,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":118,"column":0}},{"generated":{"line":118,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":119,"column":0}},{"generated":{"line":119,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":120,"column":0}},{"generated":{"line":120,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":121,"column":0}},{"generated":{"line":121,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":122,"column":0}},{"generated":{"line":122,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":123,"column":0}},{"generated":{"line":123,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":124,"column":0}},{"generated":{"line":124,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":125,"column":0}},{"generated":{"line":125,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":126,"column":0}},{"generated":{"line":126,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":127,"column":0}},{"generated":{"line":128,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":129,"column":0}},{"generated":{"line":129,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":130,"column":0}},{"generated":{"line":130,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":131,"column":0}},{"generated":{"line":131,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":132,"column":0}},{"generated":{"line":132,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":133,"column":0}},{"generated":{"line":133,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":134,"column":0}},{"generated":{"line":134,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":135,"column":0}},{"generated":{"line":135,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":136,"column":0}},{"generated":{"line":136,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":137,"column":0}},{"generated":{"line":137,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":138,"column":0}},{"generated":{"line":138,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":139,"column":0}},{"generated":{"line":139,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":140,"column":0}},{"generated":{"line":140,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":141,"column":0}},{"generated":{"line":142,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":143,"column":0}},{"generated":{"line":143,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":144,"column":0}},{"generated":{"line":144,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":145,"column":0}},{"generated":{"line":145,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":146,"column":0}},{"generated":{"line":146,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":147,"column":0}},{"generated":{"line":147,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":148,"column":0}},{"generated":{"line":148,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":149,"column":0}},{"generated":{"line":149,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":150,"column":0}},{"generated":{"line":150,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":151,"column":0}},{"generated":{"line":151,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":152,"column":0}},{"generated":{"line":152,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":153,"column":0}},{"generated":{"line":153,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":154,"column":0}},{"generated":{"line":154,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":155,"column":0}},{"generated":{"line":155,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":156,"column":0}},{"generated":{"line":156,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":157,"column":0}},{"generated":{"line":157,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":158,"column":0}},{"generated":{"line":158,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":159,"column":0}},{"generated":{"line":159,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":160,"column":0}},{"generated":{"line":160,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":161,"column":0}},{"generated":{"line":161,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":162,"column":0}},{"generated":{"line":162,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":163,"column":0}},{"generated":{"line":163,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":164,"column":0}},{"generated":{"line":164,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":165,"column":0}},{"generated":{"line":165,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":166,"column":0}},{"generated":{"line":166,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":167,"column":0}},{"generated":{"line":167,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":168,"column":0}},{"generated":{"line":168,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":169,"column":0}},{"generated":{"line":169,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":170,"column":0}},{"generated":{"line":170,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":171,"column":0}},{"generated":{"line":171,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":172,"column":0}},{"generated":{"line":172,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":173,"column":0}},{"generated":{"line":173,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":174,"column":0}},{"generated":{"line":174,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":175,"column":0}},{"generated":{"line":175,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":176,"column":0}},{"generated":{"line":176,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":177,"column":0}},{"generated":{"line":177,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":178,"column":0}},{"generated":{"line":178,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":179,"column":0}},{"generated":{"line":179,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":180,"column":0}},{"generated":{"line":180,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":181,"column":0}},{"generated":{"line":181,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":182,"column":0}},{"generated":{"line":182,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":183,"column":0}},{"generated":{"line":183,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":184,"column":0}},{"generated":{"line":184,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":185,"column":0}},{"generated":{"line":185,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":186,"column":0}},{"generated":{"line":186,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":187,"column":0}},{"generated":{"line":187,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":188,"column":0}},{"generated":{"line":188,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":189,"column":0}},{"generated":{"line":189,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":190,"column":0}},{"generated":{"line":190,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":191,"column":0}},{"generated":{"line":191,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":192,"column":0}},{"generated":{"line":192,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":193,"column":0}},{"generated":{"line":193,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":194,"column":0}},{"generated":{"line":194,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":195,"column":0}},{"generated":{"line":195,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":196,"column":0}},{"generated":{"line":196,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":197,"column":0}},{"generated":{"line":197,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":198,"column":0}},{"generated":{"line":198,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":199,"column":0}},{"generated":{"line":199,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":200,"column":0}},{"generated":{"line":200,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":201,"column":0}},{"generated":{"line":201,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":202,"column":0}},{"generated":{"line":202,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":203,"column":0}},{"generated":{"line":203,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":204,"column":0}},{"generated":{"line":204,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":205,"column":0}},{"generated":{"line":205,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":206,"column":0}},{"generated":{"line":206,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":207,"column":0}},{"generated":{"line":207,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":208,"column":0}},{"generated":{"line":208,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":209,"column":0}},{"generated":{"line":209,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":210,"column":0}},{"generated":{"line":210,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":211,"column":0}},{"generated":{"line":211,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":212,"column":0}},{"generated":{"line":212,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":213,"column":0}},{"generated":{"line":213,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":214,"column":0}},{"generated":{"line":214,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":215,"column":0}},{"generated":{"line":215,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":216,"column":0}},{"generated":{"line":216,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":217,"column":0}},{"generated":{"line":217,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":218,"column":0}},{"generated":{"line":218,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":219,"column":0}},{"generated":{"line":219,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":220,"column":0}},{"generated":{"line":220,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":221,"column":0}},{"generated":{"line":222,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":223,"column":0}},{"generated":{"line":223,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":224,"column":0}},{"generated":{"line":224,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":225,"column":0}},{"generated":{"line":225,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":226,"column":0}},{"generated":{"line":226,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":227,"column":0}},{"generated":{"line":227,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":228,"column":0}},{"generated":{"line":228,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":229,"column":0}},{"generated":{"line":229,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":230,"column":0}},{"generated":{"line":230,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":231,"column":0}},{"generated":{"line":231,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":232,"column":0}},{"generated":{"line":232,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":233,"column":0}},{"generated":{"line":233,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":234,"column":0}},{"generated":{"line":234,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":235,"column":0}},{"generated":{"line":236,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":237,"column":0}},{"generated":{"line":237,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":238,"column":0}},{"generated":{"line":238,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":239,"column":0}},{"generated":{"line":239,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":240,"column":0}},{"generated":{"line":240,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":241,"column":0}},{"generated":{"line":241,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":242,"column":0}},{"generated":{"line":242,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":243,"column":0}},{"generated":{"line":243,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":244,"column":0}},{"generated":{"line":244,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":245,"column":0}},{"generated":{"line":245,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":246,"column":0}},{"generated":{"line":247,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":248,"column":0}},{"generated":{"line":248,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":249,"column":0}},{"generated":{"line":249,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":250,"column":0}},{"generated":{"line":250,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":251,"column":0}},{"generated":{"line":251,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":252,"column":0}},{"generated":{"line":252,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":253,"column":0}},{"generated":{"line":253,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":254,"column":0}},{"generated":{"line":254,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":255,"column":0}},{"generated":{"line":255,"column":0},"source":"../../node_modules/html-to-text/lib/typedefs.js","original":{"line":256,"column":0}}],"sources":{"../../node_modules/html-to-text/lib/typedefs.js":"\n/**\n * @typedef { object } Options\n * HtmlToText options.\n *\n * @property { BaseElementsOptions }  [baseElements]\n * Options for narrowing down to informative parts of HTML document.\n *\n * @property { DecodeOptions }        [decodeOptions]\n * Text decoding options given to `he.decode`.\n *\n * For more information see the [he](https://github.com/mathiasbynens/he) module.\n *\n * @property { object.< string, FormatCallback > } [formatters = {}]\n * A dictionary with custom formatting functions for specific kinds of elements.\n *\n * Keys are custom string identifiers, values are callbacks.\n *\n * @property { LimitsOptions }        [limits]\n * Options for handling complex documents and limiting the output size.\n *\n * @property { LongWordSplitOptions } [longWordSplit]\n * Describes how to wrap long words.\n *\n * @property { boolean }              [preserveNewlines = false]\n * By default, any newlines `\\n` from the input HTML are collapsed into space as any other HTML whitespace characters.\n * If `true`, these newlines will be preserved in the output.\n * This is only useful when input HTML carries some plain text formatting instead of proper tags.\n *\n * @property { SelectorDefinition[] } [selectors = []]\n * Instructions for how to render HTML elements based on matched selectors.\n *\n * Use this to (re)define options for new or already supported tags.\n *\n * @property { string[] | boolean }   [tables = []]\n * Deprecated. Use selectors with `format: 'dataTable'` instead.\n *\n * @property { string }               [whitespaceCharacters = ' \\t\\r\\n\\f\\u200b']\n * All characters that are considered whitespace.\n * Default is according to HTML specifications.\n *\n * @property { number | boolean | null } [wordwrap = 80]\n * After how many chars a line break should follow in `p` elements.\n *\n * Set to `null` or `false` to disable word-wrapping.\n */\n\n/**\n * @typedef { object } BaseElementsOptions\n * Options for narrowing down to informative parts of HTML document.\n *\n * @property { string[] } [selectors = ['body']]\n * The resulting text output will be composed from the text content of elements\n * matched with these selectors.\n *\n * @property { 'selectors' | 'occurrence' } [orderBy = 'selectors']\n * When multiple selectors are set, this option specifies\n * whether the selectors order has to be reflected in the output text.\n *\n * `'selectors'` (default) - matches for the first selector will appear first, etc;\n *\n * `'occurrence'` - all bases will appear in the same order as in input HTML.\n *\n * @property { boolean } [returnDomByDefault = true]\n * Use the entire document if none of provided selectors matched.\n */\n\n/**\n * @typedef { object } DecodeOptions\n * Text decoding options given to `he.decode`.\n *\n * For more information see the [he](https://github.com/mathiasbynens/he) module.\n *\n * @property { boolean } [isAttributeValue = false]\n * TL;DR: If set to `true` - leave attribute values raw, don't parse them as text content.\n *\n * @property { boolean } [strict = false]\n * TL;DR: If set to `true` - throw an error on invalid HTML input.\n */\n\n/**\n * @typedef { object } LimitsOptions\n * Options for handling complex documents and limiting the output size.\n *\n * @property { string } [ellipsis = ...]\n * A string to put in place of skipped content.\n *\n * @property { number | undefined } [maxBaseElements = undefined]\n * Stop looking for new base elements after this number of matches.\n *\n * No ellipsis is used when this condition is met.\n *\n * No limit if undefined.\n *\n * @property { number | undefined } [maxChildNodes = undefined]\n * Process only this many child nodes of any element.\n *\n * Remaining nodes, if any, will be replaced with ellipsis.\n *\n * Text nodes are counted along with tags.\n *\n * No limit if undefined.\n *\n * @property { number | undefined } [maxDepth = undefined]\n * Only go to a certain depth starting from `Options.baseElement`.\n *\n * Replace deeper nodes with ellipsis.\n *\n * No depth limit if undefined.\n *\n * @property { number } [maxInputLength = 16_777_216]\n * If the input string is longer than this value - it will be truncated\n * and a message will be sent to `stderr`.\n *\n * Ellipsis is not used in this case.\n */\n\n/**\n * @typedef { object } LongWordSplitOptions\n * Describes how to wrap long words.\n *\n * @property { boolean }  [forceWrapOnLimit = false]\n * Break long words on the `Options.wordwrap` limit when there are no characters to wrap on.\n *\n * @property { string[] } [wrapCharacters = []]\n * An array containing the characters that may be wrapped on.\n */\n\n/**\n * @typedef { object } SelectorDefinition\n * Describes how to handle tags matched by a selector.\n *\n * @property { string } selector\n * CSS selector. Refer to README for notes on supported selectors etc.\n *\n * @property { string } format\n * Identifier of a {@link FormatCallback}, built-in or provided in `Options.formatters` dictionary.\n *\n * @property { FormatOptions } options\n * Options to customize the formatter for this element.\n */\n\n/**\n * @typedef { object } FormatOptions\n * Options specific to different formatters ({@link FormatCallback}).\n * This is an umbrella type definition. Each formatter supports it's own subset of options.\n *\n * @property { number } [leadingLineBreaks]\n * Number of line breaks to separate previous block from this one.\n *\n * Note that N+1 line breaks are needed to make N empty lines.\n *\n * @property { number } [trailingLineBreaks]\n * Number of line breaks to separate this block from the next one.\n *\n * Note that N+1 line breaks are needed to make N empty lines.\n *\n * @property { string | null } [baseUrl = null]\n * (Only for: `anchor` and `image` formatters.) Server host for link `href` attributes and image `src` attributes\n * relative to the root (the ones that start with `/`).\n *\n * For example, with `baseUrl = 'http://asdf.com'` and `<a href='/dir/subdir'>...</a>`\n * the link in the text will be `http://asdf.com/dir/subdir`.\n *\n * Keep in mind that `baseUrl` should not end with a `/`.\n *\n * @property { boolean } [hideLinkHrefIfSameAsText = false]\n * (Only for: `anchor` formatter.) By default links are translated in the following way:\n *\n * `<a href='link'>text</a>` => becomes => `text [link]`.\n *\n * If this option is set to `true` and `link` and `text` are the same,\n * `[link]` will be omitted and only `text` will be present.\n *\n * @property { boolean } [ignoreHref = false]\n * (Only for: `anchor` formatter.) Ignore all links. Only process internal text of anchor tags.\n *\n * @property { [string, string] | false } [linkBrackets]\n * (Only for: `anchor` and `image` formatters.) Surround links with these brackets. Default: `['[', ']']`.\n *\n * Set to `false` or `['', '']` to disable.\n *\n * @property { boolean } [noAnchorUrl = true]\n * (Only for: `anchor` formatter.) Ignore anchor links (where `href='#...'`).\n *\n * @property { string } [itemPrefix = ' * ']\n * (Only for: `unorderedList` formatter.) String prefix for each list item.\n *\n * @property { boolean } [uppercase = true]\n * (Only for: `heading` formatter.) By default, headings (`<h1>`, `<h2>`, etc) are uppercased.\n *\n * Set this to `false` to leave headings as they are.\n *\n * @property { number | undefined } [length = undefined]\n * (Only for: `horizontalLine` formatter.) Length of the `<hr/>` line.\n *\n * If numeric value is provided - it is used.\n * Otherwise, if global `wordwrap` number is provided - it is used.\n * If neither is true, then the fallback value of 40 is used.\n *\n * @property { boolean } [trimEmptyLines = true]\n * (Only for: `blockquote` formatter.) Trim empty lines from blockquote.\n *\n * @property { boolean } [uppercaseHeaderCells = true]\n * (Only for: `table`, `dataTable` formatter.) By default, heading cells (`<th>`) are uppercased.\n *\n * Set this to `false` to leave heading cells as they are.\n *\n * @property { number } [maxColumnWidth = 60]\n * (Only for: `table`, `dataTable` formatter.) Data table cell content will be wrapped to fit this width\n * instead of global `wordwrap` limit.\n *\n * Set this to `undefined` in order to fall back to `wordwrap` limit.\n *\n * @property { number } [colSpacing = 3]\n * (Only for: `table`, `dataTable` formatter.) Number of spaces between data table columns.\n *\n * @property { number } [rowSpacing = 0]\n * (Only for: `table`, `dataTable` formatter.) Number of empty lines between data table rows.\n *\n */\n\n/**\n * @typedef { object } DomNode\n * Simplified definition of [htmlparser2](https://github.com/fb55/htmlparser2) Node type.\n *\n * Makes no distinction between elements (tags) and data nodes (good enough for now).\n *\n * @property { string }                 type       Type of node - \"text\", \"tag\", \"comment\", \"script\", etc.\n * @property { string }                 [data]     Content of a data node.\n * @property { string }                 [name]     Tag name.\n * @property { object.<string,string> } [attribs]  Tag attributes dictionary.\n * @property { DomNode[] }              [children] Child nodes.\n * @property { DomNode }                [parent]   Parent node.\n */\n\n/**\n * A function to stringify a DOM node.\n *\n * @callback FormatCallback\n *\n * @param   { DomNode }           elem          A DOM node as returned by [htmlparser2](https://github.com/fb55/htmlparser2).\n * @param   { RecursiveCallback } walk          Recursive callback to process child nodes.\n * @param   { BlockTextBuilder }  builder       Passed around to accumulate output text. Contains options object.\n * @param   { FormatOptions }     formatOptions Options specific to this callback.\n */\n\n/**\n * A function to process child nodes.\n * Passed into a {@link FormatCallback} as an argument.\n *\n * @callback RecursiveCallback\n *\n * @param   { DomNode[] }        [nodes] DOM nodes array.\n * @param   { BlockTextBuilder } builder Passed around to accumulate output text. Contains options object.\n */\n"},"lineCount":null}},"error":null,"hash":"5000af80f8d679a344af8f9c1b7a8969","cacheData":{"env":{}}}