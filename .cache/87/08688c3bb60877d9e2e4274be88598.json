{"id":"../../node_modules/@babel/types/lib/asserts/assertNode.js","dependencies":[{"name":"/Users/seansimpson/Dropbox/My Mac (MacBook-Pro)/Documents/Code/Udemy/MyNatours/natours-app/package.json","includedInParent":true,"mtime":1652074999468},{"name":"/Users/seansimpson/Dropbox/My Mac (MacBook-Pro)/Documents/Code/Udemy/MyNatours/natours-app/node_modules/@babel/types/package.json","includedInParent":true,"mtime":1651552428796},{"name":"../validators/isNode","loc":{"line":8,"column":22,"index":133},"parent":"/Users/seansimpson/Dropbox/My Mac (MacBook-Pro)/Documents/Code/Udemy/MyNatours/natours-app/node_modules/@babel/types/lib/asserts/assertNode.js","resolved":"/Users/seansimpson/Dropbox/My Mac (MacBook-Pro)/Documents/Code/Udemy/MyNatours/natours-app/node_modules/@babel/types/lib/validators/isNode.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\n\nvar _isNode = require(\"../validators/isNode\");\n\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    var _node$type;\n\n    var type = (_node$type = node == null ? void 0 : node.type) != null ? _node$type : JSON.stringify(node);\n    throw new TypeError(\"Not a valid node of type \\\"\".concat(type, \"\\\"\"));\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":3,"column":0},"name":"Object"},{"generated":{"line":3,"column":6},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":3,"column":6}},{"generated":{"line":3,"column":7},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":3,"column":7},"name":"defineProperty"},{"generated":{"line":3,"column":21},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":22},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":3,"column":22},"name":"exports"},{"generated":{"line":3,"column":29},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":31},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":3,"column":31}},{"generated":{"line":3,"column":43},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":45},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":3,"column":45}},{"generated":{"line":4,"column":2},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":4,"column":2},"name":"value"},{"generated":{"line":4,"column":7},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":4,"column":7}},{"generated":{"line":4,"column":9},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":4,"column":9}},{"generated":{"line":5,"column":0},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":3,"column":45}},{"generated":{"line":5,"column":1},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":3,"column":0}},{"generated":{"line":6,"column":0},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":6,"column":0},"name":"exports"},{"generated":{"line":6,"column":7},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":6,"column":7}},{"generated":{"line":6,"column":8},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":6,"column":8},"name":"default"},{"generated":{"line":6,"column":15},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":6,"column":0}},{"generated":{"line":6,"column":18},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":6,"column":18},"name":"assertNode"},{"generated":{"line":6,"column":28},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":6,"column":0}},{"generated":{"line":8,"column":0},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":8,"column":0}},{"generated":{"line":8,"column":4},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":8,"column":4},"name":"_isNode"},{"generated":{"line":8,"column":11},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":8,"column":11}},{"generated":{"line":8,"column":14},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":8,"column":14},"name":"require"},{"generated":{"line":8,"column":21},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":8,"column":21}},{"generated":{"line":8,"column":22},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":8,"column":22}},{"generated":{"line":8,"column":44},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":8,"column":21}},{"generated":{"line":8,"column":45},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":8,"column":0}},{"generated":{"line":10,"column":0},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":10,"column":0}},{"generated":{"line":10,"column":9},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":10,"column":9},"name":"assertNode"},{"generated":{"line":10,"column":19},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":10,"column":0}},{"generated":{"line":10,"column":20},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":10,"column":20},"name":"node"},{"generated":{"line":10,"column":24},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":10,"column":0}},{"generated":{"line":10,"column":26},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":10,"column":26}},{"generated":{"line":11,"column":2},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":2}},{"generated":{"line":11,"column":6},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":6}},{"generated":{"line":11,"column":7},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":7}},{"generated":{"line":11,"column":8},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":8}},{"generated":{"line":11,"column":11},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":11},"name":"_isNode"},{"generated":{"line":11,"column":18},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":18}},{"generated":{"line":11,"column":19},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":19},"name":"default"},{"generated":{"line":11,"column":26},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":7}},{"generated":{"line":11,"column":28},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":28},"name":"node"},{"generated":{"line":11,"column":32},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":7}},{"generated":{"line":11,"column":33},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":2}},{"generated":{"line":11,"column":35},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":11,"column":35}},{"generated":{"line":12,"column":4},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":12,"column":4}},{"generated":{"line":12,"column":8},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":12,"column":8},"name":"_node$type"},{"generated":{"line":12,"column":18},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":12,"column":4}},{"generated":{"line":14,"column":4},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":4}},{"generated":{"line":14,"column":8},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":10},"name":"type"},{"generated":{"line":14,"column":12},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":14}},{"generated":{"line":14,"column":15},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":17}},{"generated":{"line":14,"column":16},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":18},"name":"_node$type"},{"generated":{"line":14,"column":26},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":28}},{"generated":{"line":14,"column":29},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":31},"name":"node"},{"generated":{"line":14,"column":33},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":35}},{"generated":{"line":14,"column":37},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":39}},{"generated":{"line":14,"column":41},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":31}},{"generated":{"line":14,"column":44},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":46}},{"generated":{"line":14,"column":49},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":51}},{"generated":{"line":14,"column":50},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":31}},{"generated":{"line":14,"column":53},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":55},"name":"node"},{"generated":{"line":14,"column":57},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":59}},{"generated":{"line":14,"column":58},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":60},"name":"type"},{"generated":{"line":14,"column":62},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":17}},{"generated":{"line":14,"column":67},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":69}},{"generated":{"line":14,"column":71},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":17}},{"generated":{"line":14,"column":74},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":76},"name":"_node$type"},{"generated":{"line":14,"column":84},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":17}},{"generated":{"line":14,"column":87},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":89},"name":"JSON"},{"generated":{"line":14,"column":91},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":93}},{"generated":{"line":14,"column":92},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":94},"name":"stringify"},{"generated":{"line":14,"column":101},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":89}},{"generated":{"line":14,"column":102},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":104},"name":"node"},{"generated":{"line":14,"column":106},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":89}},{"generated":{"line":14,"column":107},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":14,"column":4}},{"generated":{"line":15,"column":4},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":15,"column":4}},{"generated":{"line":15,"column":10},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":15,"column":10}},{"generated":{"line":15,"column":14},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":15,"column":14},"name":"TypeError"},{"generated":{"line":15,"column":23},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":15,"column":10}},{"generated":{"line":15,"column":61},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":15,"column":53},"name":"type"},{"generated":{"line":15,"column":65},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":15,"column":10}},{"generated":{"line":15,"column":73},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":15,"column":4}},{"generated":{"line":16,"column":2},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":16,"column":3}},{"generated":{"line":17,"column":0},"source":"../../node_modules/@babel/types/lib/asserts/assertNode.js","original":{"line":17,"column":1}}],"sources":{"../../node_modules/@babel/types/lib/asserts/assertNode.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = assertNode;\n\nvar _isNode = require(\"../validators/isNode\");\n\nfunction assertNode(node) {\n  if (!(0, _isNode.default)(node)) {\n    var _node$type;\n\n    const type = (_node$type = node == null ? void 0 : node.type) != null ? _node$type : JSON.stringify(node);\n    throw new TypeError(`Not a valid node of type \"${type}\"`);\n  }\n}"},"lineCount":null}},"error":null,"hash":"b1b17a48d8cbc80d975af13cdab0a19c","cacheData":{"env":{}}}