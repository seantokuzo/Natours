{"id":"../../node_modules/nearley/lib/nearley.js","dependencies":[{"name":"/Users/seansimpson/Dropbox/My Mac (MacBook-Pro)/Documents/Code/Udemy/MyNatours/natours-app/package.json","includedInParent":true,"mtime":1652074999468},{"name":"/Users/seansimpson/Dropbox/My Mac (MacBook-Pro)/Documents/Code/Udemy/MyNatours/natours-app/node_modules/nearley/package.json","includedInParent":true,"mtime":1652074998968}],"generated":{"js":"(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../../node_modules/nearley/lib/nearley.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}}],"sources":{"../../node_modules/nearley/lib/nearley.js":"(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n"},"lineCount":565}},"error":null,"hash":"195eaddf78e4e682e24d3037f9d1d95a","cacheData":{"env":{}}}