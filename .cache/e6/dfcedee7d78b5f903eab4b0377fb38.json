{"id":"../../node_modules/moo/moo.js","dependencies":[{"name":"/Users/seansimpson/Dropbox/My Mac (MacBook-Pro)/Documents/Code/Udemy/MyNatours/natours-app/package.json","includedInParent":true,"mtime":1652074999468},{"name":"/Users/seansimpson/Dropbox/My Mac (MacBook-Pro)/Documents/Code/Udemy/MyNatours/natours-app/node_modules/moo/package.json","includedInParent":true,"mtime":1652074999065}],"generated":{"js":"var define;\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory) /* global define */\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory()\n  } else {\n    root.moo = factory()\n  }\n}(this, function() {\n  'use strict';\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty\n  var toString = Object.prototype.toString\n  var hasSticky = typeof new RegExp().sticky === 'boolean'\n\n  /***************************************************************************/\n\n  function isRegExp(o) { return o && toString.call(o) === '[object RegExp]' }\n  function isObject(o) { return o && typeof o === 'object' && !isRegExp(o) && !Array.isArray(o) }\n\n  function reEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n  }\n  function reGroups(s) {\n    var re = new RegExp('|' + s)\n    return re.exec('').length - 1\n  }\n  function reCapture(s) {\n    return '(' + s + ')'\n  }\n  function reUnion(regexps) {\n    if (!regexps.length) return '(?!)'\n    var source =  regexps.map(function(s) {\n      return \"(?:\" + s + \")\"\n    }).join('|')\n    return \"(?:\" + source + \")\"\n  }\n\n  function regexpOrLiteral(obj) {\n    if (typeof obj === 'string') {\n      return '(?:' + reEscape(obj) + ')'\n\n    } else if (isRegExp(obj)) {\n      // TODO: consider /u support\n      if (obj.ignoreCase) throw new Error('RegExp /i flag not allowed')\n      if (obj.global) throw new Error('RegExp /g flag is implied')\n      if (obj.sticky) throw new Error('RegExp /y flag is implied')\n      if (obj.multiline) throw new Error('RegExp /m flag is implied')\n      return obj.source\n\n    } else {\n      throw new Error('Not a pattern: ' + obj)\n    }\n  }\n\n  function objectToRules(object) {\n    var keys = Object.getOwnPropertyNames(object)\n    var result = []\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var thing = object[key]\n      var rules = [].concat(thing)\n      if (key === 'include') {\n        for (var j = 0; j < rules.length; j++) {\n          result.push({include: rules[j]})\n        }\n        continue\n      }\n      var match = []\n      rules.forEach(function(rule) {\n        if (isObject(rule)) {\n          if (match.length) result.push(ruleOptions(key, match))\n          result.push(ruleOptions(key, rule))\n          match = []\n        } else {\n          match.push(rule)\n        }\n      })\n      if (match.length) result.push(ruleOptions(key, match))\n    }\n    return result\n  }\n\n  function arrayToRules(array) {\n    var result = []\n    for (var i = 0; i < array.length; i++) {\n      var obj = array[i]\n      if (obj.include) {\n        var include = [].concat(obj.include)\n        for (var j = 0; j < include.length; j++) {\n          result.push({include: include[j]})\n        }\n        continue\n      }\n      if (!obj.type) {\n        throw new Error('Rule has no type: ' + JSON.stringify(obj))\n      }\n      result.push(ruleOptions(obj.type, obj))\n    }\n    return result\n  }\n\n  function ruleOptions(type, obj) {\n    if (!isObject(obj)) {\n      obj = { match: obj }\n    }\n    if (obj.include) {\n      throw new Error('Matching rules cannot also include states')\n    }\n\n    // nb. error and fallback imply lineBreaks\n    var options = {\n      defaultType: type,\n      lineBreaks: !!obj.error || !!obj.fallback,\n      pop: false,\n      next: null,\n      push: null,\n      error: false,\n      fallback: false,\n      value: null,\n      type: null,\n      shouldThrow: false,\n    }\n\n    // Avoid Object.assign(), so we support IE9+\n    for (var key in obj) {\n      if (hasOwnProperty.call(obj, key)) {\n        options[key] = obj[key]\n      }\n    }\n\n    // type transform cannot be a string\n    if (typeof options.type === 'string' && type !== options.type) {\n      throw new Error(\"Type transform cannot be a string (type '\" + options.type + \"' for token '\" + type + \"')\")\n    }\n\n    // convert to array\n    var match = options.match\n    options.match = Array.isArray(match) ? match : match ? [match] : []\n    options.match.sort(function(a, b) {\n      return isRegExp(a) && isRegExp(b) ? 0\n           : isRegExp(b) ? -1 : isRegExp(a) ? +1 : b.length - a.length\n    })\n    return options\n  }\n\n  function toRules(spec) {\n    return Array.isArray(spec) ? arrayToRules(spec) : objectToRules(spec)\n  }\n\n  var defaultErrorRule = ruleOptions('error', {lineBreaks: true, shouldThrow: true})\n  function compileRules(rules, hasStates) {\n    var errorRule = null\n    var fast = Object.create(null)\n    var fastAllowed = true\n    var unicodeFlag = null\n    var groups = []\n    var parts = []\n\n    // If there is a fallback rule, then disable fast matching\n    for (var i = 0; i < rules.length; i++) {\n      if (rules[i].fallback) {\n        fastAllowed = false\n      }\n    }\n\n    for (var i = 0; i < rules.length; i++) {\n      var options = rules[i]\n\n      if (options.include) {\n        // all valid inclusions are removed by states() preprocessor\n        throw new Error('Inheritance is not allowed in stateless lexers')\n      }\n\n      if (options.error || options.fallback) {\n        // errorRule can only be set once\n        if (errorRule) {\n          if (!options.fallback === !errorRule.fallback) {\n            throw new Error(\"Multiple \" + (options.fallback ? \"fallback\" : \"error\") + \" rules not allowed (for token '\" + options.defaultType + \"')\")\n          } else {\n            throw new Error(\"fallback and error are mutually exclusive (for token '\" + options.defaultType + \"')\")\n          }\n        }\n        errorRule = options\n      }\n\n      var match = options.match.slice()\n      if (fastAllowed) {\n        while (match.length && typeof match[0] === 'string' && match[0].length === 1) {\n          var word = match.shift()\n          fast[word.charCodeAt(0)] = options\n        }\n      }\n\n      // Warn about inappropriate state-switching options\n      if (options.pop || options.push || options.next) {\n        if (!hasStates) {\n          throw new Error(\"State-switching options are not allowed in stateless lexers (for token '\" + options.defaultType + \"')\")\n        }\n        if (options.fallback) {\n          throw new Error(\"State-switching options are not allowed on fallback tokens (for token '\" + options.defaultType + \"')\")\n        }\n      }\n\n      // Only rules with a .match are included in the RegExp\n      if (match.length === 0) {\n        continue\n      }\n      fastAllowed = false\n\n      groups.push(options)\n\n      // Check unicode flag is used everywhere or nowhere\n      for (var j = 0; j < match.length; j++) {\n        var obj = match[j]\n        if (!isRegExp(obj)) {\n          continue\n        }\n\n        if (unicodeFlag === null) {\n          unicodeFlag = obj.unicode\n        } else if (unicodeFlag !== obj.unicode && options.fallback === false) {\n          throw new Error('If one rule is /u then all must be')\n        }\n      }\n\n      // convert to RegExp\n      var pat = reUnion(match.map(regexpOrLiteral))\n\n      // validate\n      var regexp = new RegExp(pat)\n      if (regexp.test(\"\")) {\n        throw new Error(\"RegExp matches empty string: \" + regexp)\n      }\n      var groupCount = reGroups(pat)\n      if (groupCount > 0) {\n        throw new Error(\"RegExp has capture groups: \" + regexp + \"\\nUse (?: â€¦ ) instead\")\n      }\n\n      // try and detect rules matching newlines\n      if (!options.lineBreaks && regexp.test('\\n')) {\n        throw new Error('Rule should declare lineBreaks: ' + regexp)\n      }\n\n      // store regex\n      parts.push(reCapture(pat))\n    }\n\n\n    // If there's no fallback rule, use the sticky flag so we only look for\n    // matches at the current index.\n    //\n    // If we don't support the sticky flag, then fake it using an irrefutable\n    // match (i.e. an empty pattern).\n    var fallbackRule = errorRule && errorRule.fallback\n    var flags = hasSticky && !fallbackRule ? 'ym' : 'gm'\n    var suffix = hasSticky || fallbackRule ? '' : '|'\n\n    if (unicodeFlag === true) flags += \"u\"\n    var combined = new RegExp(reUnion(parts) + suffix, flags)\n    return {regexp: combined, groups: groups, fast: fast, error: errorRule || defaultErrorRule}\n  }\n\n  function compile(rules) {\n    var result = compileRules(toRules(rules))\n    return new Lexer({start: result}, 'start')\n  }\n\n  function checkStateGroup(g, name, map) {\n    var state = g && (g.push || g.next)\n    if (state && !map[state]) {\n      throw new Error(\"Missing state '\" + state + \"' (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n    if (g && g.pop && +g.pop !== 1) {\n      throw new Error(\"pop must be 1 (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n  }\n  function compileStates(states, start) {\n    var all = states.$all ? toRules(states.$all) : []\n    delete states.$all\n\n    var keys = Object.getOwnPropertyNames(states)\n    if (!start) start = keys[0]\n\n    var ruleMap = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      ruleMap[key] = toRules(states[key]).concat(all)\n    }\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var rules = ruleMap[key]\n      var included = Object.create(null)\n      for (var j = 0; j < rules.length; j++) {\n        var rule = rules[j]\n        if (!rule.include) continue\n        var splice = [j, 1]\n        if (rule.include !== key && !included[rule.include]) {\n          included[rule.include] = true\n          var newRules = ruleMap[rule.include]\n          if (!newRules) {\n            throw new Error(\"Cannot include nonexistent state '\" + rule.include + \"' (in state '\" + key + \"')\")\n          }\n          for (var k = 0; k < newRules.length; k++) {\n            var newRule = newRules[k]\n            if (rules.indexOf(newRule) !== -1) continue\n            splice.push(newRule)\n          }\n        }\n        rules.splice.apply(rules, splice)\n        j--\n      }\n    }\n\n    var map = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      map[key] = compileRules(ruleMap[key], true)\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      var name = keys[i]\n      var state = map[name]\n      var groups = state.groups\n      for (var j = 0; j < groups.length; j++) {\n        checkStateGroup(groups[j], name, map)\n      }\n      var fastKeys = Object.getOwnPropertyNames(state.fast)\n      for (var j = 0; j < fastKeys.length; j++) {\n        checkStateGroup(state.fast[fastKeys[j]], name, map)\n      }\n    }\n\n    return new Lexer(map, start)\n  }\n\n  function keywordTransform(map) {\n    var reverseMap = Object.create(null)\n    var byLength = Object.create(null)\n    var types = Object.getOwnPropertyNames(map)\n    for (var i = 0; i < types.length; i++) {\n      var tokenType = types[i]\n      var item = map[tokenType]\n      var keywordList = Array.isArray(item) ? item : [item]\n      keywordList.forEach(function(keyword) {\n        (byLength[keyword.length] = byLength[keyword.length] || []).push(keyword)\n        if (typeof keyword !== 'string') {\n          throw new Error(\"keyword must be string (in keyword '\" + tokenType + \"')\")\n        }\n        reverseMap[keyword] = tokenType\n      })\n    }\n\n    // fast string lookup\n    // https://jsperf.com/string-lookups\n    function str(x) { return JSON.stringify(x) }\n    var source = ''\n    source += 'switch (value.length) {\\n'\n    for (var length in byLength) {\n      var keywords = byLength[length]\n      source += 'case ' + length + ':\\n'\n      source += 'switch (value) {\\n'\n      keywords.forEach(function(keyword) {\n        var tokenType = reverseMap[keyword]\n        source += 'case ' + str(keyword) + ': return ' + str(tokenType) + '\\n'\n      })\n      source += '}\\n'\n    }\n    source += '}\\n'\n    return Function('value', source) // type\n  }\n\n  /***************************************************************************/\n\n  var Lexer = function(states, state) {\n    this.startState = state\n    this.states = states\n    this.buffer = ''\n    this.stack = []\n    this.reset()\n  }\n\n  Lexer.prototype.reset = function(data, info) {\n    this.buffer = data || ''\n    this.index = 0\n    this.line = info ? info.line : 1\n    this.col = info ? info.col : 1\n    this.queuedToken = info ? info.queuedToken : null\n    this.queuedThrow = info ? info.queuedThrow : null\n    this.setState(info ? info.state : this.startState)\n    this.stack = info && info.stack ? info.stack.slice() : []\n    return this\n  }\n\n  Lexer.prototype.save = function() {\n    return {\n      line: this.line,\n      col: this.col,\n      state: this.state,\n      stack: this.stack.slice(),\n      queuedToken: this.queuedToken,\n      queuedThrow: this.queuedThrow,\n    }\n  }\n\n  Lexer.prototype.setState = function(state) {\n    if (!state || this.state === state) return\n    this.state = state\n    var info = this.states[state]\n    this.groups = info.groups\n    this.error = info.error\n    this.re = info.regexp\n    this.fast = info.fast\n  }\n\n  Lexer.prototype.popState = function() {\n    this.setState(this.stack.pop())\n  }\n\n  Lexer.prototype.pushState = function(state) {\n    this.stack.push(this.state)\n    this.setState(state)\n  }\n\n  var eat = hasSticky ? function(re, buffer) { // assume re is /y\n    return re.exec(buffer)\n  } : function(re, buffer) { // assume re is /g\n    var match = re.exec(buffer)\n    // will always match, since we used the |(?:) trick\n    if (match[0].length === 0) {\n      return null\n    }\n    return match\n  }\n\n  Lexer.prototype._getGroup = function(match) {\n    var groupCount = this.groups.length\n    for (var i = 0; i < groupCount; i++) {\n      if (match[i + 1] !== undefined) {\n        return this.groups[i]\n      }\n    }\n    throw new Error('Cannot find token type for matched text')\n  }\n\n  function tokenToString() {\n    return this.value\n  }\n\n  Lexer.prototype.next = function() {\n    var index = this.index\n\n    // If a fallback token matched, we don't need to re-run the RegExp\n    if (this.queuedGroup) {\n      var token = this._token(this.queuedGroup, this.queuedText, index)\n      this.queuedGroup = null\n      this.queuedText = \"\"\n      return token\n    }\n\n    var buffer = this.buffer\n    if (index === buffer.length) {\n      return // EOF\n    }\n\n    // Fast matching for single characters\n    var group = this.fast[buffer.charCodeAt(index)]\n    if (group) {\n      return this._token(group, buffer.charAt(index), index)\n    }\n\n    // Execute RegExp\n    var re = this.re\n    re.lastIndex = index\n    var match = eat(re, buffer)\n\n    // Error tokens match the remaining buffer\n    var error = this.error\n    if (match == null) {\n      return this._token(error, buffer.slice(index, buffer.length), index)\n    }\n\n    var group = this._getGroup(match)\n    var text = match[0]\n\n    if (error.fallback && match.index !== index) {\n      this.queuedGroup = group\n      this.queuedText = text\n\n      // Fallback tokens contain the unmatched portion of the buffer\n      return this._token(error, buffer.slice(index, match.index), index)\n    }\n\n    return this._token(group, text, index)\n  }\n\n  Lexer.prototype._token = function(group, text, offset) {\n    // count line breaks\n    var lineBreaks = 0\n    if (group.lineBreaks) {\n      var matchNL = /\\n/g\n      var nl = 1\n      if (text === '\\n') {\n        lineBreaks = 1\n      } else {\n        while (matchNL.exec(text)) { lineBreaks++; nl = matchNL.lastIndex }\n      }\n    }\n\n    var token = {\n      type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,\n      value: typeof group.value === 'function' ? group.value(text) : text,\n      text: text,\n      toString: tokenToString,\n      offset: offset,\n      lineBreaks: lineBreaks,\n      line: this.line,\n      col: this.col,\n    }\n    // nb. adding more props to token object will make V8 sad!\n\n    var size = text.length\n    this.index += size\n    this.line += lineBreaks\n    if (lineBreaks !== 0) {\n      this.col = size - nl + 1\n    } else {\n      this.col += size\n    }\n\n    // throw, if no rule with {error: true}\n    if (group.shouldThrow) {\n      throw new Error(this.formatError(token, \"invalid syntax\"))\n    }\n\n    if (group.pop) this.popState()\n    else if (group.push) this.pushState(group.push)\n    else if (group.next) this.setState(group.next)\n\n    return token\n  }\n\n  if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n    var LexerIterator = function(lexer) {\n      this.lexer = lexer\n    }\n\n    LexerIterator.prototype.next = function() {\n      var token = this.lexer.next()\n      return {value: token, done: !token}\n    }\n\n    LexerIterator.prototype[Symbol.iterator] = function() {\n      return this\n    }\n\n    Lexer.prototype[Symbol.iterator] = function() {\n      return new LexerIterator(this)\n    }\n  }\n\n  Lexer.prototype.formatError = function(token, message) {\n    if (token == null) {\n      // An undefined token indicates EOF\n      var text = this.buffer.slice(this.index)\n      var token = {\n        text: text,\n        offset: this.index,\n        lineBreaks: text.indexOf('\\n') === -1 ? 0 : 1,\n        line: this.line,\n        col: this.col,\n      }\n    }\n    var start = Math.max(0, token.offset - token.col + 1)\n    var eol = token.lineBreaks ? token.text.indexOf('\\n') : token.text.length\n    var firstLine = this.buffer.substring(start, token.offset + eol)\n    message += \" at line \" + token.line + \" col \" + token.col + \":\\n\\n\"\n    message += \"  \" + firstLine + \"\\n\"\n    message += \"  \" + Array(token.col).join(\" \") + \"^\"\n    return message\n  }\n\n  Lexer.prototype.clone = function() {\n    return new Lexer(this.states, this.state)\n  }\n\n  Lexer.prototype.has = function(tokenType) {\n    return true\n  }\n\n\n  return {\n    compile: compile,\n    states: compileStates,\n    error: Object.freeze({error: true}),\n    fallback: Object.freeze({fallback: true}),\n    keywords: keywordTransform,\n  }\n\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/moo/moo.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"../../node_modules/moo/moo.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}}],"sources":{"../../node_modules/moo/moo.js":"(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory) /* global define */\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory()\n  } else {\n    root.moo = factory()\n  }\n}(this, function() {\n  'use strict';\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty\n  var toString = Object.prototype.toString\n  var hasSticky = typeof new RegExp().sticky === 'boolean'\n\n  /***************************************************************************/\n\n  function isRegExp(o) { return o && toString.call(o) === '[object RegExp]' }\n  function isObject(o) { return o && typeof o === 'object' && !isRegExp(o) && !Array.isArray(o) }\n\n  function reEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n  }\n  function reGroups(s) {\n    var re = new RegExp('|' + s)\n    return re.exec('').length - 1\n  }\n  function reCapture(s) {\n    return '(' + s + ')'\n  }\n  function reUnion(regexps) {\n    if (!regexps.length) return '(?!)'\n    var source =  regexps.map(function(s) {\n      return \"(?:\" + s + \")\"\n    }).join('|')\n    return \"(?:\" + source + \")\"\n  }\n\n  function regexpOrLiteral(obj) {\n    if (typeof obj === 'string') {\n      return '(?:' + reEscape(obj) + ')'\n\n    } else if (isRegExp(obj)) {\n      // TODO: consider /u support\n      if (obj.ignoreCase) throw new Error('RegExp /i flag not allowed')\n      if (obj.global) throw new Error('RegExp /g flag is implied')\n      if (obj.sticky) throw new Error('RegExp /y flag is implied')\n      if (obj.multiline) throw new Error('RegExp /m flag is implied')\n      return obj.source\n\n    } else {\n      throw new Error('Not a pattern: ' + obj)\n    }\n  }\n\n  function objectToRules(object) {\n    var keys = Object.getOwnPropertyNames(object)\n    var result = []\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var thing = object[key]\n      var rules = [].concat(thing)\n      if (key === 'include') {\n        for (var j = 0; j < rules.length; j++) {\n          result.push({include: rules[j]})\n        }\n        continue\n      }\n      var match = []\n      rules.forEach(function(rule) {\n        if (isObject(rule)) {\n          if (match.length) result.push(ruleOptions(key, match))\n          result.push(ruleOptions(key, rule))\n          match = []\n        } else {\n          match.push(rule)\n        }\n      })\n      if (match.length) result.push(ruleOptions(key, match))\n    }\n    return result\n  }\n\n  function arrayToRules(array) {\n    var result = []\n    for (var i = 0; i < array.length; i++) {\n      var obj = array[i]\n      if (obj.include) {\n        var include = [].concat(obj.include)\n        for (var j = 0; j < include.length; j++) {\n          result.push({include: include[j]})\n        }\n        continue\n      }\n      if (!obj.type) {\n        throw new Error('Rule has no type: ' + JSON.stringify(obj))\n      }\n      result.push(ruleOptions(obj.type, obj))\n    }\n    return result\n  }\n\n  function ruleOptions(type, obj) {\n    if (!isObject(obj)) {\n      obj = { match: obj }\n    }\n    if (obj.include) {\n      throw new Error('Matching rules cannot also include states')\n    }\n\n    // nb. error and fallback imply lineBreaks\n    var options = {\n      defaultType: type,\n      lineBreaks: !!obj.error || !!obj.fallback,\n      pop: false,\n      next: null,\n      push: null,\n      error: false,\n      fallback: false,\n      value: null,\n      type: null,\n      shouldThrow: false,\n    }\n\n    // Avoid Object.assign(), so we support IE9+\n    for (var key in obj) {\n      if (hasOwnProperty.call(obj, key)) {\n        options[key] = obj[key]\n      }\n    }\n\n    // type transform cannot be a string\n    if (typeof options.type === 'string' && type !== options.type) {\n      throw new Error(\"Type transform cannot be a string (type '\" + options.type + \"' for token '\" + type + \"')\")\n    }\n\n    // convert to array\n    var match = options.match\n    options.match = Array.isArray(match) ? match : match ? [match] : []\n    options.match.sort(function(a, b) {\n      return isRegExp(a) && isRegExp(b) ? 0\n           : isRegExp(b) ? -1 : isRegExp(a) ? +1 : b.length - a.length\n    })\n    return options\n  }\n\n  function toRules(spec) {\n    return Array.isArray(spec) ? arrayToRules(spec) : objectToRules(spec)\n  }\n\n  var defaultErrorRule = ruleOptions('error', {lineBreaks: true, shouldThrow: true})\n  function compileRules(rules, hasStates) {\n    var errorRule = null\n    var fast = Object.create(null)\n    var fastAllowed = true\n    var unicodeFlag = null\n    var groups = []\n    var parts = []\n\n    // If there is a fallback rule, then disable fast matching\n    for (var i = 0; i < rules.length; i++) {\n      if (rules[i].fallback) {\n        fastAllowed = false\n      }\n    }\n\n    for (var i = 0; i < rules.length; i++) {\n      var options = rules[i]\n\n      if (options.include) {\n        // all valid inclusions are removed by states() preprocessor\n        throw new Error('Inheritance is not allowed in stateless lexers')\n      }\n\n      if (options.error || options.fallback) {\n        // errorRule can only be set once\n        if (errorRule) {\n          if (!options.fallback === !errorRule.fallback) {\n            throw new Error(\"Multiple \" + (options.fallback ? \"fallback\" : \"error\") + \" rules not allowed (for token '\" + options.defaultType + \"')\")\n          } else {\n            throw new Error(\"fallback and error are mutually exclusive (for token '\" + options.defaultType + \"')\")\n          }\n        }\n        errorRule = options\n      }\n\n      var match = options.match.slice()\n      if (fastAllowed) {\n        while (match.length && typeof match[0] === 'string' && match[0].length === 1) {\n          var word = match.shift()\n          fast[word.charCodeAt(0)] = options\n        }\n      }\n\n      // Warn about inappropriate state-switching options\n      if (options.pop || options.push || options.next) {\n        if (!hasStates) {\n          throw new Error(\"State-switching options are not allowed in stateless lexers (for token '\" + options.defaultType + \"')\")\n        }\n        if (options.fallback) {\n          throw new Error(\"State-switching options are not allowed on fallback tokens (for token '\" + options.defaultType + \"')\")\n        }\n      }\n\n      // Only rules with a .match are included in the RegExp\n      if (match.length === 0) {\n        continue\n      }\n      fastAllowed = false\n\n      groups.push(options)\n\n      // Check unicode flag is used everywhere or nowhere\n      for (var j = 0; j < match.length; j++) {\n        var obj = match[j]\n        if (!isRegExp(obj)) {\n          continue\n        }\n\n        if (unicodeFlag === null) {\n          unicodeFlag = obj.unicode\n        } else if (unicodeFlag !== obj.unicode && options.fallback === false) {\n          throw new Error('If one rule is /u then all must be')\n        }\n      }\n\n      // convert to RegExp\n      var pat = reUnion(match.map(regexpOrLiteral))\n\n      // validate\n      var regexp = new RegExp(pat)\n      if (regexp.test(\"\")) {\n        throw new Error(\"RegExp matches empty string: \" + regexp)\n      }\n      var groupCount = reGroups(pat)\n      if (groupCount > 0) {\n        throw new Error(\"RegExp has capture groups: \" + regexp + \"\\nUse (?: â€¦ ) instead\")\n      }\n\n      // try and detect rules matching newlines\n      if (!options.lineBreaks && regexp.test('\\n')) {\n        throw new Error('Rule should declare lineBreaks: ' + regexp)\n      }\n\n      // store regex\n      parts.push(reCapture(pat))\n    }\n\n\n    // If there's no fallback rule, use the sticky flag so we only look for\n    // matches at the current index.\n    //\n    // If we don't support the sticky flag, then fake it using an irrefutable\n    // match (i.e. an empty pattern).\n    var fallbackRule = errorRule && errorRule.fallback\n    var flags = hasSticky && !fallbackRule ? 'ym' : 'gm'\n    var suffix = hasSticky || fallbackRule ? '' : '|'\n\n    if (unicodeFlag === true) flags += \"u\"\n    var combined = new RegExp(reUnion(parts) + suffix, flags)\n    return {regexp: combined, groups: groups, fast: fast, error: errorRule || defaultErrorRule}\n  }\n\n  function compile(rules) {\n    var result = compileRules(toRules(rules))\n    return new Lexer({start: result}, 'start')\n  }\n\n  function checkStateGroup(g, name, map) {\n    var state = g && (g.push || g.next)\n    if (state && !map[state]) {\n      throw new Error(\"Missing state '\" + state + \"' (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n    if (g && g.pop && +g.pop !== 1) {\n      throw new Error(\"pop must be 1 (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n  }\n  function compileStates(states, start) {\n    var all = states.$all ? toRules(states.$all) : []\n    delete states.$all\n\n    var keys = Object.getOwnPropertyNames(states)\n    if (!start) start = keys[0]\n\n    var ruleMap = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      ruleMap[key] = toRules(states[key]).concat(all)\n    }\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var rules = ruleMap[key]\n      var included = Object.create(null)\n      for (var j = 0; j < rules.length; j++) {\n        var rule = rules[j]\n        if (!rule.include) continue\n        var splice = [j, 1]\n        if (rule.include !== key && !included[rule.include]) {\n          included[rule.include] = true\n          var newRules = ruleMap[rule.include]\n          if (!newRules) {\n            throw new Error(\"Cannot include nonexistent state '\" + rule.include + \"' (in state '\" + key + \"')\")\n          }\n          for (var k = 0; k < newRules.length; k++) {\n            var newRule = newRules[k]\n            if (rules.indexOf(newRule) !== -1) continue\n            splice.push(newRule)\n          }\n        }\n        rules.splice.apply(rules, splice)\n        j--\n      }\n    }\n\n    var map = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      map[key] = compileRules(ruleMap[key], true)\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      var name = keys[i]\n      var state = map[name]\n      var groups = state.groups\n      for (var j = 0; j < groups.length; j++) {\n        checkStateGroup(groups[j], name, map)\n      }\n      var fastKeys = Object.getOwnPropertyNames(state.fast)\n      for (var j = 0; j < fastKeys.length; j++) {\n        checkStateGroup(state.fast[fastKeys[j]], name, map)\n      }\n    }\n\n    return new Lexer(map, start)\n  }\n\n  function keywordTransform(map) {\n    var reverseMap = Object.create(null)\n    var byLength = Object.create(null)\n    var types = Object.getOwnPropertyNames(map)\n    for (var i = 0; i < types.length; i++) {\n      var tokenType = types[i]\n      var item = map[tokenType]\n      var keywordList = Array.isArray(item) ? item : [item]\n      keywordList.forEach(function(keyword) {\n        (byLength[keyword.length] = byLength[keyword.length] || []).push(keyword)\n        if (typeof keyword !== 'string') {\n          throw new Error(\"keyword must be string (in keyword '\" + tokenType + \"')\")\n        }\n        reverseMap[keyword] = tokenType\n      })\n    }\n\n    // fast string lookup\n    // https://jsperf.com/string-lookups\n    function str(x) { return JSON.stringify(x) }\n    var source = ''\n    source += 'switch (value.length) {\\n'\n    for (var length in byLength) {\n      var keywords = byLength[length]\n      source += 'case ' + length + ':\\n'\n      source += 'switch (value) {\\n'\n      keywords.forEach(function(keyword) {\n        var tokenType = reverseMap[keyword]\n        source += 'case ' + str(keyword) + ': return ' + str(tokenType) + '\\n'\n      })\n      source += '}\\n'\n    }\n    source += '}\\n'\n    return Function('value', source) // type\n  }\n\n  /***************************************************************************/\n\n  var Lexer = function(states, state) {\n    this.startState = state\n    this.states = states\n    this.buffer = ''\n    this.stack = []\n    this.reset()\n  }\n\n  Lexer.prototype.reset = function(data, info) {\n    this.buffer = data || ''\n    this.index = 0\n    this.line = info ? info.line : 1\n    this.col = info ? info.col : 1\n    this.queuedToken = info ? info.queuedToken : null\n    this.queuedThrow = info ? info.queuedThrow : null\n    this.setState(info ? info.state : this.startState)\n    this.stack = info && info.stack ? info.stack.slice() : []\n    return this\n  }\n\n  Lexer.prototype.save = function() {\n    return {\n      line: this.line,\n      col: this.col,\n      state: this.state,\n      stack: this.stack.slice(),\n      queuedToken: this.queuedToken,\n      queuedThrow: this.queuedThrow,\n    }\n  }\n\n  Lexer.prototype.setState = function(state) {\n    if (!state || this.state === state) return\n    this.state = state\n    var info = this.states[state]\n    this.groups = info.groups\n    this.error = info.error\n    this.re = info.regexp\n    this.fast = info.fast\n  }\n\n  Lexer.prototype.popState = function() {\n    this.setState(this.stack.pop())\n  }\n\n  Lexer.prototype.pushState = function(state) {\n    this.stack.push(this.state)\n    this.setState(state)\n  }\n\n  var eat = hasSticky ? function(re, buffer) { // assume re is /y\n    return re.exec(buffer)\n  } : function(re, buffer) { // assume re is /g\n    var match = re.exec(buffer)\n    // will always match, since we used the |(?:) trick\n    if (match[0].length === 0) {\n      return null\n    }\n    return match\n  }\n\n  Lexer.prototype._getGroup = function(match) {\n    var groupCount = this.groups.length\n    for (var i = 0; i < groupCount; i++) {\n      if (match[i + 1] !== undefined) {\n        return this.groups[i]\n      }\n    }\n    throw new Error('Cannot find token type for matched text')\n  }\n\n  function tokenToString() {\n    return this.value\n  }\n\n  Lexer.prototype.next = function() {\n    var index = this.index\n\n    // If a fallback token matched, we don't need to re-run the RegExp\n    if (this.queuedGroup) {\n      var token = this._token(this.queuedGroup, this.queuedText, index)\n      this.queuedGroup = null\n      this.queuedText = \"\"\n      return token\n    }\n\n    var buffer = this.buffer\n    if (index === buffer.length) {\n      return // EOF\n    }\n\n    // Fast matching for single characters\n    var group = this.fast[buffer.charCodeAt(index)]\n    if (group) {\n      return this._token(group, buffer.charAt(index), index)\n    }\n\n    // Execute RegExp\n    var re = this.re\n    re.lastIndex = index\n    var match = eat(re, buffer)\n\n    // Error tokens match the remaining buffer\n    var error = this.error\n    if (match == null) {\n      return this._token(error, buffer.slice(index, buffer.length), index)\n    }\n\n    var group = this._getGroup(match)\n    var text = match[0]\n\n    if (error.fallback && match.index !== index) {\n      this.queuedGroup = group\n      this.queuedText = text\n\n      // Fallback tokens contain the unmatched portion of the buffer\n      return this._token(error, buffer.slice(index, match.index), index)\n    }\n\n    return this._token(group, text, index)\n  }\n\n  Lexer.prototype._token = function(group, text, offset) {\n    // count line breaks\n    var lineBreaks = 0\n    if (group.lineBreaks) {\n      var matchNL = /\\n/g\n      var nl = 1\n      if (text === '\\n') {\n        lineBreaks = 1\n      } else {\n        while (matchNL.exec(text)) { lineBreaks++; nl = matchNL.lastIndex }\n      }\n    }\n\n    var token = {\n      type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,\n      value: typeof group.value === 'function' ? group.value(text) : text,\n      text: text,\n      toString: tokenToString,\n      offset: offset,\n      lineBreaks: lineBreaks,\n      line: this.line,\n      col: this.col,\n    }\n    // nb. adding more props to token object will make V8 sad!\n\n    var size = text.length\n    this.index += size\n    this.line += lineBreaks\n    if (lineBreaks !== 0) {\n      this.col = size - nl + 1\n    } else {\n      this.col += size\n    }\n\n    // throw, if no rule with {error: true}\n    if (group.shouldThrow) {\n      throw new Error(this.formatError(token, \"invalid syntax\"))\n    }\n\n    if (group.pop) this.popState()\n    else if (group.push) this.pushState(group.push)\n    else if (group.next) this.setState(group.next)\n\n    return token\n  }\n\n  if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n    var LexerIterator = function(lexer) {\n      this.lexer = lexer\n    }\n\n    LexerIterator.prototype.next = function() {\n      var token = this.lexer.next()\n      return {value: token, done: !token}\n    }\n\n    LexerIterator.prototype[Symbol.iterator] = function() {\n      return this\n    }\n\n    Lexer.prototype[Symbol.iterator] = function() {\n      return new LexerIterator(this)\n    }\n  }\n\n  Lexer.prototype.formatError = function(token, message) {\n    if (token == null) {\n      // An undefined token indicates EOF\n      var text = this.buffer.slice(this.index)\n      var token = {\n        text: text,\n        offset: this.index,\n        lineBreaks: text.indexOf('\\n') === -1 ? 0 : 1,\n        line: this.line,\n        col: this.col,\n      }\n    }\n    var start = Math.max(0, token.offset - token.col + 1)\n    var eol = token.lineBreaks ? token.text.indexOf('\\n') : token.text.length\n    var firstLine = this.buffer.substring(start, token.offset + eol)\n    message += \" at line \" + token.line + \" col \" + token.col + \":\\n\\n\"\n    message += \"  \" + firstLine + \"\\n\"\n    message += \"  \" + Array(token.col).join(\" \") + \"^\"\n    return message\n  }\n\n  Lexer.prototype.clone = function() {\n    return new Lexer(this.states, this.state)\n  }\n\n  Lexer.prototype.has = function(tokenType) {\n    return true\n  }\n\n\n  return {\n    compile: compile,\n    states: compileStates,\n    error: Object.freeze({error: true}),\n    fallback: Object.freeze({fallback: true}),\n    keywords: keywordTransform,\n  }\n\n}));\n"},"lineCount":602}},"error":null,"hash":"0c472662a8be4c2793951f44205cb257","cacheData":{"env":{}}}